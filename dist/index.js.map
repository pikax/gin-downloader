{"version":3,"file":"index.js","sources":["../src/enum.ts","../src/request/requestCloudFlareStrategy.ts","../src/request/requestRetryStrategy.ts","../src/request/index.ts","../src/config.ts","../src/util.ts","../src/request/pool.ts","../src/mangasite.ts","../src/sites/batoto/config.ts","../src/sites/batoto/names.ts","../src/sites/batoto/filter.ts","../src/sites/batoto/parser.ts","../src/sites/batoto/index.ts","../src/super_obj.ts","../src/index.ts"],"sourcesContent":["/**\r\n * Created by pikax on 08/07/2017.\r\n */\r\n\r\nexport enum Genre {\r\n  Action = \"Action\",\r\n  Adult = \"Adult\",\r\n  Adventure = \"Adventure\",\r\n  AwardWinning = \"Award Winning\",\r\n  Comedy = \"Comedy\",\r\n  Comic = \"Comic\",\r\n  Cooking = \"Cooking\",\r\n  Demons = \"Demons\",\r\n  Doujinshi = \"Doujinshi\",\r\n  Drama = \"Drama\",\r\n  Ecchi = \"Ecchi\",\r\n  Fantasy = \"Fantasy\",\r\n  FourKoma = \"4-Koma\",\r\n  GenderBender = \"Gender Bender\",\r\n  Harem = \"Harem\",\r\n  Historical = \"Historical\",\r\n  Horror = \"Horror\",\r\n  Josei = \"Josei\",\r\n  Lolicon = \"Lolicon\",\r\n  Magic = \"Magic\",\r\n  Manga = \"Manga\",\r\n  Manhua = \"Manhua\",\r\n  Manhwa = \"Manhwa\",\r\n  MartialArts = \"Martial Arts\",\r\n  Mature = \"Mature\",\r\n  Mecha = \"Mecha\",\r\n  Medical = \"Medical\",\r\n  Military = \"Military\",\r\n  Music = \"Music\",\r\n  Mystery = \"Mystery\",\r\n  Oneshot = \"Oneshot\",\r\n  Psychological = \"Psychological\",\r\n  Romance = \"Romance\",\r\n  SchoolLife = \"School Life\",\r\n  SciFi = \"Sci-fi\",\r\n  Seinen = \"Seinen\",\r\n  Shotacon = \"Shotacon\",\r\n  Shoujo = \"Shoujo\",\r\n  ShoujoAi = \"Shoujo Ai\",\r\n  Shounen = \"Shounen\",\r\n  ShounenAi = \"Shounen Ai\",\r\n  SliceOfLife = \"Slice of Life\",\r\n  Smut = \"Smut\",\r\n  Sports = \"Sports\",\r\n  Supernatural = \"Supernatural\",\r\n  SuperPower = \"SuperPower\",\r\n  Tragedy = \"Tragedy\",\r\n  Vampire = \"Vampire\",\r\n  Webtoon = \"Webtoon\",\r\n  Yaoi = \"Yaoi\",\r\n  Yuri = \"Yuri\",\r\n\r\n  NoChapters = \"[no chapters]\"\r\n}\r\n\r\nexport enum Type {\r\n  Manga = \"Manga\",\r\n  Manhwa = \"Manhwa\",\r\n  Manhua = \"Manhua\",\r\n  Comic = \"Comic\",\r\n  Artbook = \"Artbook\", // An artbook is a title that contains purely art and has no story\r\n  Other = \"Other\", // bato.to\r\n}\r\n\r\n\r\nexport enum FilterCondition {\r\n  Equal,\r\n  Contains,\r\n  NotContains,\r\n  StartsWith,\r\n  EndsWith,\r\n  Less,\r\n  Greater,\r\n  LessThan,\r\n  GreaterThan,\r\n}\r\n\r\nexport enum GenreCondition {\r\n  And = 0,\r\n  Or = 1,\r\n}\r\n\r\nexport enum FilterStatus {\r\n  Ongoing = \"Ongoing\",\r\n  Complete = \"Complete\",\r\n  Cancelled = \"Cancelled\"\r\n}\r\n","/**\n * Created by pikax on 23/05/2017.\n */\n\nimport {OptionsWithUrl} from \"request\";\nconst cloudscraper = require(\"cloudscraper\");\n\nimport {RequestStrategy} from \"./index\";\nimport config from \"./../config\";\n\n\n\n// specific options for cloudscraper lib\nconst DefaultOptions = {\n  // none\n  method: \"GET\"\n};\n\n\nexport class RequestCloudFlareStrategy implements RequestStrategy {\n  request(options: string | OptionsWithUrl): Promise<any> {\n    let opts: OptionsWithUrl = <any>{...DefaultOptions, ...config.config.request};\n\n    if (typeof options === \"string\") {\n      opts.url = options;\n    }\n    else {\n      opts = {...opts, ...options};\n    }\n\n    return new Promise((res, rej) => {\n      let callback = (err: number, response: any, body: Buffer) => {\n        if (err) {\n          return rej(err);\n        }\n        return res(body);\n      };\n\n      if (opts.method === \"POST\") {\n        cloudscraper.post(opts.url, opts.body, callback);\n      }\n      else {\n        cloudscraper.request(opts, callback);\n      }\n    });\n  }\n}\n\nexport const strategy = new RequestCloudFlareStrategy();\nexport default strategy;\n","import config from \"src/config\";\nimport {GinUrlOptions, OptionsWithUrl, RequestStrategy} from \"./index\";\nimport {pick} from \"lodash\";\n\nconst requestRetry = require(\"requestretry\");\n\n\n// specific options for requestretry lib\nconst DefaultOptions = {\n  retryStrategy: requestRetry.RetryStrategies.HTTPOrNetworkError, // (default) retry on 5xx or network errors\n  fullResponse: false, // To resolve the promise with the full response or just the body\n};\n\nexport class RequestRetryStrategy implements RequestStrategy {\n  request(options: GinUrlOptions): Promise<any> {\n    let opts: OptionsWithUrl = <any>{...DefaultOptions, ... config.config.request, ...pick(config.config, \"maxRetries\", \"timeout\", \"interval\")};\n    if (typeof options === \"string\") {\n      opts.url = options;\n    }\n    else {\n      opts = {...opts, ...options};\n    }\n\n\n    //TODO find a better place for this\n    if (config.config.disableHttps) {\n      opts.url = opts.url.toString().replace(\"https\", \"http\");\n    }\n\n    return requestRetry(opts);\n  }\n}\n\nexport const strategy = new RequestRetryStrategy();\nexport default strategy;\n\n","/**\r\n * Created by pikax on 16/07/2017.\r\n */\r\n\r\n\r\nimport {Options, OptionsWithUrl} from \"request\";\r\nimport {strategy as cloudFlareStrategy} from \"./requestCloudFlareStrategy\";\r\nimport {strategy as retryStrategy} from \"./requestRetryStrategy\";\r\n\r\nexport {Options, CoreOptions, OptionsWithUrl} from \"request\";\r\n\r\n//\r\n// import {RequestRetryStrategy} from \"./requestRetryStrategy\";\r\n// import {RequestCloudFlareStrategy} from \"./requestCloudFareStrategy\";\r\n\r\n\r\nexport type GinUrlOptions = string | OptionsWithUrl;\r\n\r\n\r\nexport interface RequestStrategy {\r\n  request(options: GinUrlOptions): Promise<any>;\r\n}\r\n\r\n/*: {retry: RequestStrategy, cloudflare: RequestStrategy} */\r\n\r\n\r\n\r\n\r\nexport const strategies: {retry: RequestStrategy, cloudflare: RequestStrategy} = {\r\n  retry: retryStrategy,\r\n  cloudflare: cloudFlareStrategy,\r\n};\r\n\r\n\r\n//\r\n// const s: {retry: RequestRetryStrategy, cloudflare: RequestCloudFlareStrategy} = {\r\n//   retry: requestRetryStrategy,\r\n//   cloudflare: requestCloudFareStrategy,\r\n// };\r\n//\r\n//\r\n// export const strategies = s;\r\n//\r\n","/**\r\n * Created by pikax on 16/07/2017.\r\n */\r\nimport {RequestStrategy, Options, CoreOptions, strategies} from \"./request/index\";\r\n\r\n// import {RequestRetryStrategy} from \"./request/requestRetryStrategy\";\r\n// import {RequestRetryStrategy} from \"./request/requestRetryStrategy\";\r\n\r\n\r\n\r\nexport interface GinPoolConfig {\r\n  simultaneousRequests?: number;\r\n  maxQueueSize?: number; // after hitting this size the queue will wait until promise level go as much as safeQueueSize\r\n  safeQueueSize?: number; //\r\n\r\n  requestInterval?: number;\r\n\r\n\r\n\r\n  //TODO add history max number\r\n\r\n  match: RegExp;\r\n}\r\n\r\n\r\n//\r\n// export interface GinSiteConfig {\r\n//   strategy: RequestStrategy;\r\n// }\r\n\r\nexport interface GinConfig {\r\n  maxRetries?: number;\r\n  timeout?: number;\r\n  interval?: number;\r\n\r\n  disableHttps?: boolean; // NOTE not sure, probably move to other place\r\n\r\n  pooling?: {[poolId: string]: GinPoolConfig};\r\n\r\n  sites?: {[key: string]: RequestStrategy};\r\n\r\n  request?: CoreOptions;\r\n}\r\n\r\n\r\n/*TODO this shouldn't be a function, this should be a const only, but the default config is called by the strategies\r\n* that means when we load the strategies module, it needs to load this one first but this uses strategies.\r\n* */\r\nconst DefaultConfig: GinConfig = {\r\n  maxRetries: 50,\r\n  timeout: 10000,\r\n  interval: 1000,\r\n\r\n  pooling: {\r\n    MangafoxSearch: {\r\n        requestInterval: 5000,\r\n        match: /mangafox\\.me\\/search\\.php/\r\n    },\r\n\r\n\r\n    // NOTE this should be always the last one!\r\n    \"*\": {\r\n      simultaneousRequests: 30,\r\n      maxQueueSize: 300,\r\n      safeQueueSize: 50,\r\n      match: /.*/,\r\n    }\r\n  },\r\n\r\n  disableHttps: true,\r\n\r\n\r\n  sites: {\r\n    batoto: strategies.retry,\r\n    mangafox: strategies.retry,\r\n    mangapanda: strategies.retry,\r\n    mangahere: strategies.retry,\r\n    kissmanga: strategies.cloudflare,\r\n  },\r\n\r\n  request: {\r\n    jar: true,\r\n    gzip: true,\r\n    followAllRedirects: true,\r\n    forever: true,\r\n    proxy: process.env.proxy,\r\n    headers: {\r\n      \"Accept-Charset\": \"utf-8;q=0.7,*;q=0.3\",\r\n      \"Accept-Language\": \"en-US,en;q=0.8\",\r\n      \"Connection\": \"keep-alive\",\r\n      \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\r\n      \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.111 Safari/537.36\",\r\n      \"Accept-Encoding\": \"gzip,deflate\",\r\n    }\r\n  }\r\n};\r\n\r\nexport class Config {\r\n  private _use: GinConfig;\r\n  private _config: GinConfig;\r\n\r\n\r\n  get defaultConfig() { return DefaultConfig; }\r\n\r\n  get config(): GinConfig { return this._config || (this._config = this.buildConfig()); }\r\n\r\n\r\n  get use(): GinConfig {\r\n    return this._use;\r\n  }\r\n  set use(use: Partial<GinConfig>) {\r\n    this._use = use;\r\n\r\n    this._config = this.buildConfig(use);\r\n  }\r\n\r\n  reset() {\r\n    this._config = this.defaultConfig;\r\n    this._use = null;\r\n  }\r\n\r\n  private buildConfig(conf: GinConfig= {}) {\r\n    let c: GinConfig = { ...this.defaultConfig,\r\n      ...conf,\r\n    };\r\n\r\n    if (conf.request) {\r\n      c.request = {\r\n        ...this.defaultConfig.request,\r\n        ...conf.request\r\n      };\r\n    }\r\n\r\n    if (conf.sites) {\r\n      c.sites = {\r\n        ...this.defaultConfig.sites,\r\n        ...conf.sites\r\n      };\r\n    }\r\n    return c;\r\n  }\r\n}\r\n\r\nexport const ginConfig = new Config();\r\nexport default ginConfig;\r\n\r\n\r\n\r\n\r\n","import * as cheerio from \"cheerio\";\r\nimport {filter, MangaFilter, NameFilterCondition, Search} from \"src/filter\";\r\nimport {gin} from \"src/interface\";\r\nimport FilterSupport = filter.FilterSupport;\r\nimport MangaXDoc = gin.MangaXDoc;\r\n\r\n\r\ndeclare global {\r\n\r\n  interface String {\r\n    lastDigit(): number;\r\n    firstDigit(): number;\r\n    leftTrim(): string;\r\n    decodeEscapeSequence(): string;\r\n    getMatches(regex: RegExp, index?: number): string[];\r\n  }\r\n}\r\n\r\nconst regexLastDigit = /\\d+(\\.\\d{1,3})?$/;\r\nconst regexFirstDigit = /\\d+(\\.\\d{1,3})?/;\r\n\r\nString.prototype.lastDigit = function(){\r\n  let match = this.match(regexLastDigit);\r\n  if (!match) { // can't be to smart if the last digit is 0\r\n    return null;\r\n  }\r\n  return +match[0];\r\n};\r\n\r\nString.prototype.firstDigit = function(){\r\n  let match = this.match(regexFirstDigit);\r\n  if (!match) { // can't be to smart if the first digit is 0\r\n    return null;\r\n  }\r\n  return +match[0];\r\n};\r\n\r\nString.prototype.leftTrim = function() {\r\n  return this.replace(/^\\s+/, \"\");\r\n};\r\n\r\nString.prototype.decodeEscapeSequence = function() {\r\n  return this.replace(/\\\\x([0-9A-Fa-f]{2})/g, function() {\r\n    return String.fromCharCode(parseInt(arguments[1], 16));\r\n  });\r\n};\r\n\r\n\r\nexport function promiseSetTimeout(ms: number): Promise<any> {\r\n  return new Promise((resolve => setTimeout(resolve, ms)));\r\n}\r\n\r\n\r\nexport function promiseSetTimeoutWithPromise<T>(ms: number, p: Promise<T>): Promise<T> {\r\n  return promiseSetTimeout(ms)\r\n    .then(x => p);\r\n}\r\n\r\n\r\nexport class Lazy<T> {\r\n  private _value: T;\r\n  get value(): T {\r\n    return this._value || (this._value = this._func());\r\n  }\r\n\r\n  constructor(private _func: () => T) {\r\n  }\r\n}\r\n\r\n\r\nexport const parseDoc = (source: string, params: { location: string } = undefined): MangaXDoc => {\r\n  let doc: MangaXDoc = (<any>cheerio.load(source));\r\n  doc.location = params && params.location;\r\n  return doc;\r\n};\r\n\r\n\r\nexport const sanitize = (children: CheerioElement[]) => children.filter(x => x.type !== \"text\");\r\n\r\n\r\nexport const sanitizeName = (name: string) => {\r\n  return name; // not sure if we should use this\r\n  // const regex = /(?:’|–|Ζ|∞|[\\u00b0-\\u00bf]|[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|[\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|[\\ud83c[\\ude32-\\ude3a]|[\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g;\r\n  //\r\n  // return name.replace(regex, encodeURIComponent);\r\n};\r\n\r\n\r\nexport const procFilter = (condition: MangaFilter | string, def?: MangaFilter): FilterSupport => {\r\n  let search: filter.Search = (def && def.search) || {} as any;\r\n\r\n\r\n  if (typeof condition === \"string\") {\r\n    search.name = {\r\n      name: condition\r\n    };\r\n    return {search};\r\n  }\r\n  else {\r\n    let nc: NameFilterCondition = (condition && condition.name && {name: condition.name}) || undefined;\r\n    let ns: filter.Search = (condition && condition.search) || undefined as any;\r\n\r\n    search = {name: nc, ...search, ...ns};\r\n\r\n    if (search) {\r\n      let {genre, name, author, artist, released, rating} = search;\r\n\r\n      if (Array.isArray(genre)) { // is array of ['Comedy', 'Action'], as default sets as InGenre\r\n        let defGenre = def && def.search && def.search.genre;\r\n        search.genre = {...defGenre, inGenres: genre};\r\n      }\r\n\r\n      if (typeof name === \"string\") {\r\n        search.name = {\r\n          name\r\n        };\r\n      }\r\n      if (typeof author === \"string\") {\r\n        search.author = {\r\n          name: author\r\n        };\r\n      }\r\n      if (typeof artist === \"string\") {\r\n        search.artist = {\r\n          name: artist\r\n        };\r\n      }\r\n\r\n      if (typeof released === \"number\") {\r\n        search.released = {\r\n          value: released\r\n        };\r\n      }\r\n\r\n      if (typeof rating === \"number\") {\r\n        search.rating = {\r\n          from: rating\r\n        };\r\n      }\r\n    }\r\n  }\r\n  //\r\n  // if (filter.name) {\r\n  //   filter.name = sanitizeName(filter.name);\r\n  // }\r\n  // if (filter.search && filter.search.name) {\r\n  //   const name = filter.search.name;\r\n  //\r\n  //   if (typeof name !== \"string\") {\r\n  //     name.name = sanitizeName(name.name);\r\n  //   }\r\n  // }\r\n\r\n  return {...(condition as FilterSupport), search};\r\n};\r\n\r\n\r\n/*NOTE not sure*/\r\nexport function getLocationByCharacters(str: string) {\r\n}\r\n\r\n\r\nexport function containsChineseCharaters(x: string): void {\r\n\r\n}\r\n\r\nexport function containsJaponeseCharacters(x: string): boolean {\r\n  return !!x.match(jpRegex);\r\n}\r\n\r\nconst jpRegex = /[\\u3000-\\u303F]|[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|[\\uFF00-\\uFFEF]|[\\u4E00-\\u9FAF]|[\\u2605-\\u2606]|[\\u2190-\\u2195]|\\u203B/g;\r\n\r\n\r\n/*ending*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {OptionsWithUrl} from \"request\";\r\nimport {ginConfig, GinPoolConfig} from \"src/config\";\r\nimport {Lazy, promiseSetTimeout} from \"src/util\";\r\nimport {GinUrlOptions, RequestStrategy} from \"./index\";\r\nimport {Url} from \"url\";\r\nimport * as moment from \"moment\";\r\nimport _date = moment.unitOfTime._date;\r\n\r\nconst Queue = require(\"promise-queue\") as Queue;\r\n\r\nconst TICK = 33;\r\n\r\n\r\ninterface Queue {\r\n  new (maxConcurrent: number, maxQueued?: number): Queue;\r\n\r\n  add<T>(generator: () => Promise<T>): Promise<T>;\r\n\r\n  getQueueLength(): number;\r\n\r\n  getPendingLength(): number;\r\n}\r\n\r\n\r\nexport type GinPoolQueue = GinPoolConfig & { queue: QueuePool };\r\n\r\nlet pools: Array<GinPoolQueue>;\r\n\r\nexport interface ActivePool {\r\n  id: number;\r\n\r\n  uri: GinUrlOptions;\r\n  item?: Lazy<Promise<any>>;\r\n  isActive: boolean;\r\n}\r\n\r\nexport type HistoryPool =\r\n  ActivePool\r\n  & { resolved?: Date, started?: Date, created: Date, failed?: boolean, error?: any };\r\n\r\nexport interface QueuePool {\r\n  queue(uri: GinUrlOptions, strategy: RequestStrategy): Promise<any>;\r\n\r\n  // history: HistoryPool[];\r\n}\r\n\r\n\r\nexport function request(uri: GinUrlOptions, strategy: RequestStrategy): Promise<any> {\r\n  let pool: GinPoolQueue;\r\n\r\n  if (!ginConfig.config.pooling || !(pool = getPool(uri))) {\r\n    return strategy.request(uri);\r\n  }\r\n\r\n  return pool.queue.queue(uri, strategy);\r\n}\r\n\r\n\r\nexport function getPool(uri: GinUrlOptions): GinPoolQueue {\r\n  pools = pools || buildPool();\r\n\r\n  const url = isOptionsWithUrl(uri)\r\n    ? uri.url.toString()\r\n    : uri;\r\n\r\n  return pools.find(x => !!url.match(x.match));\r\n}\r\n\r\n\r\nfunction isOptionsWithUrl(uri: GinUrlOptions): uri is OptionsWithUrl {\r\n  return (<OptionsWithUrl>uri).url !== undefined;\r\n}\r\n\r\nexport function rebuildPool() {\r\n  pools = buildPool();\r\n}\r\n\r\n\r\nfunction buildPool(): Array<GinPoolQueue> {\r\n  const {pooling} = ginConfig.config;\r\n\r\n  const pools: Array<GinPoolQueue> = [];\r\n\r\n  for (let p in pooling) {\r\n    const pool = pooling[p];\r\n\r\n    let queue: QueuePool;\r\n\r\n    if (pool.requestInterval) {\r\n      queue = new IntervalPool(pool);\r\n    }\r\n    else {\r\n      if (pool.simultaneousRequests) {\r\n        queue = new ConcurrentQueue(pool);\r\n      }\r\n      else {\r\n        throw new Error(\"unknown pool type\");\r\n      }\r\n    }\r\n\r\n    pools.push({...pool, queue});\r\n  }\r\n\r\n  return pools;\r\n}\r\n\r\n//\r\n// export class IntervalPool implements QueuePool {\r\n//   private _currId: number = 0;\r\n//\r\n//   private _active: ActivePool;\r\n//   // private _history: {[id: string]: HistoryPool} = {};\r\n//   private _history = new Map<number, HistoryPool>();\r\n//\r\n//   get history(): HistoryPool[] {\r\n//     return Array.from(this._history.values());\r\n//   } // copy list\r\n//\r\n//\r\n//   get isActive(): boolean {\r\n//     return !!this._active;\r\n//   }\r\n//\r\n//\r\n//   private set active(value: ActivePool) {\r\n//     // const h = this._history[this._active.id];\r\n//     // h.resolved = true;\r\n//     this._active = value;\r\n//   }\r\n//\r\n//\r\n//   constructor(private _config: GinPoolConfig) {\r\n//   }\r\n//\r\n//\r\n//   queue(uri: GinUrlOptions, strategy: RequestStrategy): Promise<any> {\r\n//     let id = this.getNextId();\r\n//     const last = this._history.get(id - 1);\r\n//     const history: HistoryPool = {\r\n//       id,\r\n//       uri,\r\n//       isActive: true,\r\n//       created: new Date(),\r\n//     };\r\n//     this._history.set(id, history);\r\n//\r\n//     let lazy = new Lazy(async () => {\r\n//       try {\r\n//         history.started = new Date();\r\n//         return await strategy.request(uri);\r\n//       }\r\n//       finally {\r\n//         history.resolved = new Date();\r\n//       }\r\n//     });\r\n//\r\n//     if (last) {\r\n//       lazy = history.item = this.waitForLast(last, lazy);\r\n//     }\r\n//\r\n//     return this.execItem(id, lazy);\r\n//   }\r\n//\r\n//   private async execItem(id: number, lazy: Lazy<Promise<any>>) {\r\n//     const h = this._history.get(id);\r\n//\r\n//     try {\r\n//       this.active = {\r\n//         id,\r\n//         uri: h.uri,\r\n//         isActive: true,\r\n//       };\r\n//       h.item = lazy;\r\n//       return await lazy.value.catch(x => {\r\n//         throw h.error = x;\r\n//       });\r\n//     }\r\n//     finally {\r\n//       h.failed = true;\r\n//       h.isActive = false;\r\n//       this.active = null;\r\n//     }\r\n//   }\r\n//\r\n//   private waitForLast(last: HistoryPool, lazy: Lazy<Promise<any>>): Lazy<Promise<any>> {\r\n//     const {requestInterval} = this._config;\r\n//     return new Lazy(async () => {\r\n//       while (last.isActive) {\r\n//         await last.item.value // just wait until the last finish or fails, if it fails we should ignore the exception\r\n//           .catch((e) => e);\r\n//       }\r\n//       const dt = last.resolved;\r\n//       const passedTime = Date.now() - dt.getTime();\r\n//\r\n//       const missing = requestInterval - passedTime;\r\n//\r\n//       if (missing > 0) {\r\n//         await promiseSetTimeout(missing);\r\n//       }\r\n//       return await lazy.value;\r\n//     });\r\n//   }\r\n//\r\n//   private getNextId() {\r\n//     return this._currId++;\r\n//   }\r\n// }\r\n\r\n\r\nexport class ConcurrentQueue implements QueuePool {\r\n  private _currId: number = 0;\r\n\r\n  private _history = new Map<number, HistoryPool>();\r\n  get history(): HistoryPool[] {\r\n    return Array.from(this._history.values());\r\n  } // copy list\r\n\r\n  private readonly _queue: Queue;\r\n\r\n\r\n  constructor(private _config: GinPoolConfig) {\r\n    this._queue = new Queue(_config.simultaneousRequests);\r\n  }\r\n\r\n\r\n  async queue(uri: GinUrlOptions, strategy: RequestStrategy): Promise<any> {\r\n\r\n    if (this._queue.getQueueLength() > this._config.maxQueueSize) {\r\n\r\n      while (this._queue.getQueueLength() < this._config.safeQueueSize) {\r\n        await promiseSetTimeout(TICK);\r\n      }\r\n    }\r\n\r\n\r\n    let lazy = new Lazy(() => strategy.request(uri));\r\n\r\n    return this._queue.add(() => lazy.value);\r\n  }\r\n\r\n\r\n  // async exec(lazy: Lazy<Promise<any>>, history: HistoryPool) {\r\n  //   try {\r\n  //     history.item = lazy;\r\n  //     return await lazy.value.catch(x => {\r\n  //       throw history.error = x;\r\n  //     });\r\n  //   }\r\n  //   finally {\r\n  //     history.failed = true;\r\n  //     history.isActive = false;\r\n  //   }\r\n  // }\r\n\r\n\r\n  private getNextId() {\r\n    return this._currId++;\r\n  }\r\n}\r\n\r\n\r\nexport class IntervalLazy<T extends Promise<any>> extends Lazy<T> {\r\n  resolved?: Date;\r\n  started?: Date;\r\n  created: Date;\r\n  failed?: boolean;\r\n  error?: any;\r\n\r\n\r\n  async append(lazy: Lazy<T>): Promise<IntervalLazy<T>> {\r\n    let pValue: T = null;\r\n\r\n    while (!this.resolved) {\r\n      const w = (this.created.getMilliseconds() + this._requestInterval) - Date.now();\r\n\r\n      if (w > 0) {\r\n        await promiseSetTimeout(w);\r\n      }\r\n      else {\r\n        pValue = this.value;\r\n        await pValue;\r\n      }\r\n    }\r\n\r\n    const w = (this.resolved.getMilliseconds() + this._requestInterval) - Date.now();\r\n\r\n    if (w > 0) {\r\n      await promiseSetTimeout(w);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  // appendNew(func : ()=>T){\r\n  //   return new IntervalLazy(async ()=>{\r\n  //\r\n  //     while(thi)\r\n  //     if(!this.started){\r\n  //\r\n  //     }\r\n  //\r\n  //\r\n  //\r\n  //\r\n  //\r\n  //   });\r\n  // }\r\n\r\n\r\n  constructor(_func: () => T, private _requestInterval: number) {\r\n    super(() => {\r\n      this.started = new Date();\r\n      try {\r\n        const result = _func();\r\n\r\n        if (result instanceof Promise) {\r\n          result.then(x => {\r\n            this.resolved = new Date();\r\n            return x;\r\n          }).catch(x => {\r\n            this.resolved = new Date();\r\n            this.error = x;\r\n            this.failed = true;\r\n          });\r\n        }\r\n        else {\r\n          this.resolved = new Date();\r\n        }\r\n        return result;\r\n      }\r\n      catch (e) {\r\n        this.resolved = new Date();\r\n        this.error = e;\r\n        this.failed = true;\r\n      }\r\n    });\r\n    this.created = new Date();\r\n  }\r\n}\r\n\r\n\r\nexport class IntervalPool implements QueuePool {\r\n  currentLazy: IntervalLazy<Promise<any>>;\r\n\r\n  // history: HistoryPool[]; //TODO remove\r\n\r\n\r\n  constructor(private _config: GinPoolConfig) {\r\n\r\n  }\r\n\r\n\r\n  async queue(uri: GinUrlOptions, strategy: RequestStrategy): Promise<any> {\r\n    const prev = this.currentLazy;\r\n\r\n    const current = new IntervalLazy(() => strategy.request(uri), this._config.requestInterval);\r\n    this.currentLazy = current;\r\n\r\n    if (prev) {\r\n      // let wait the time we should at least\r\n      const w = (prev.created.getTime() + this._config.requestInterval) - Date.now();\r\n      if (w > 0) {\r\n        await promiseSetTimeout(w);\r\n      }\r\n\r\n      // if the promise haven't start yet, we should wait\r\n      while (!prev.started) {\r\n        await promiseSetTimeout(TICK);\r\n      }\r\n      const p = prev.value;\r\n\r\n\r\n      try {\r\n        await p;\r\n      } catch (e) {\r\n        // ignore\r\n      }\r\n\r\n      // let wait the time we should at least\r\n      const w2 = (prev.resolved.getTime() + this._config.requestInterval) - Date.now();\r\n      if (w2 > 0) {\r\n        await promiseSetTimeout(w2);\r\n      }\r\n    }\r\n\r\n    return await current.value;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {IDebugger} from \"debug\";\n\nimport {find} from \"lodash\";\nimport {ginConfig} from \"src/config\";\nimport {FilteredResults, MangaFilter} from \"src/filter\";\n\nimport {Chapter, gin, GinImage, GinImagePromise, ImageCollection, Info, Site, InfoChapter} from \"src/interface\";\nimport {RequestStrategy, OptionsWithUrl} from \"src/request/index\";\nimport {request} from \"src/request/pool\";\nimport {Lazy, parseDoc} from \"src/util\";\nimport {parse} from \"url\";\n\nconst debug = require(\"debug\");\nimport MangaSource = gin.MangaSource;\nimport MangaXDoc = gin.MangaXDoc;\nimport NameHelper = gin.NameHelper;\n\nimport SiteConfig = gin.SiteConfig;\nimport SiteParser = gin.SiteParser;\nimport ChapterSource = gin.ChapterSource;\n\nexport abstract class MangaSite<C extends SiteConfig, P extends SiteParser, N extends NameHelper> implements Site {\n  abstract sitename: string;\n\n  private _parser: P;\n  protected verbose: IDebugger;\n  protected debug: IDebugger;\n  protected error: IDebugger;\n  private _config: C;\n  private _nameHelper: N;\n\n  get parser(): P {\n    return this._parser;\n  }\n\n  get config(): C {\n    return this._config;\n  }\n\n  get nameHelper(): N {\n    return this._nameHelper;\n  }\n\n  protected constructor(config: C, parser: P, nameHelper: N) {\n    this.debug = debug(`gin-downloader:${config.name}`);\n    this.verbose = debug(`gin-downloader:${config.name}:verbose`);\n    this.error = debug(`gin-downloader:${config.name}:error`);\n\n    this._config = config;\n    this._nameHelper = nameHelper;\n    this._parser = parser;\n  }\n\n  async mangas(): Promise<MangaSource[]> {\n    this.debug(\"getting mangas\");\n\n    let opts = this.buildMangasRequest(this.config.mangas_url);\n    let mangas = await this.getDoc(opts)\n      .then(this.parser.mangas);\n\n    this.debug(`mangas: ${mangas.length}`);\n\n    return mangas;\n  }\n\n  filter(filter?: MangaFilter): Promise<FilteredResults> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  async latest(): Promise<Chapter[]> {\n    this.debug(\"getting latest\");\n\n    let opts = this.buildLatestRequest(this.config.latest_url);\n    let mangas = await this.getDoc(opts).then(this.parser.latest);\n    this.verbose(`got ${mangas.length} chapters`);\n\n    return mangas;\n  }\n\n  async info(name: string): Promise<Info> {\n    if (!name) {\n      throw new Error(\"Please provide a name\");\n    }\n    this.debug(`getting info for ${name}`);\n\n    try {\n      let src = await this.resolveMangaUrl(name);\n      let opts = this.buildInfoRequest(src);\n      let info = await this.getDoc(opts).then(this.parser.info);\n      this.verbose(\"info:%o\", info);\n      this.debug(`got info for ${name}`);\n\n      return info;\n    }\n    catch (e) {\n      this.error(\"%o\", e);\n      throw new Error(`${name} not found!`);\n    }\n  }\n\n  async chapters(name: string): Promise<Chapter[]> {\n    if (!name) {\n      throw new Error(\"Please provide a name\");\n    }\n\n    this.debug(`getting chapters for ${name}`);\n\n    try {\n      let src = await this.resolveMangaUrl(name);\n      let opts = this.buildInfoRequest(src);\n      let chapters = await this.getDoc(opts).then(this.parser.chapters);\n      this.verbose(\"chapters:%o\", chapters);\n      this.debug(`got chapters for ${name}`);\n\n      return chapters;\n    }\n    catch (e) {\n      this.error(\"%o\", e);\n      throw new Error(`${name} not found!`);\n    }\n  }\n\n  async infoChapters(name: string): Promise<InfoChapter> {\n    if (!name) {\n      throw new Error(\"Please provide a name\");\n    }\n\n    this.debug(`getting info & chapters for ${name}`);\n\n    try {\n      let src = await this.resolveMangaUrl(name);\n      let opts = this.buildInfoRequest(src);\n      let doc = await this.getDoc(opts);\n\n      let info = await this.parser.info(doc);\n      let chapters = await this.parser.chapters(doc);\n\n      this.verbose(\"info:%o\\nchapters:%o\", chapters);\n      this.debug(`got info & chapters for ${name}`);\n\n      return {...info, chapters};\n    }\n    catch (e) {\n      this.error(\"%o\", e);\n      throw new Error(`${name} not found!`);\n    }\n  }\n\n  async infoChaptersByUrl(src: string): Promise<InfoChapter> {\n    this.debug(`getting info & chapters for ${src}`);\n\n    try {\n      let opts = this.buildInfoRequest(src);\n      let doc = await this.getDoc(opts);\n\n      let info = await this.parser.info(doc);\n      let chapters = await this.parser.chapters(doc);\n\n      this.verbose(\"info:%o\\nchapters:%o\", chapters);\n      this.debug(`got info & chapters for ${src}`);\n\n      return {...info, chapters};\n    }\n    catch (e) {\n      this.error(\"%o\", e);\n      throw new Error(`${src} not found!`);\n    }\n  }\n\n  async images(name: string, chapter: any): Promise<ImageCollection> {\n    if (!name) {\n      throw new Error(\"Please provide a name\");\n    }\n    if (!chapter) {\n      throw new Error(\"Please provide a chapter\");\n    }\n\n    this.debug(\"getting images for %s : %s\", name, chapter);\n\n    let chap = await this.resolveChapterSource(name, chapter);\n    let opts = this.buildChapterRequest(chap);\n    let paths = await this.getDoc(opts).then(this.parser.imagesPaths);\n\n    return paths.map(x => this.processImagePath(this.buildImagePathsRequest(x)));\n  }\n\n\n  async imagesByUrl(url: string): Promise<ImageCollection> {\n    let opts = this.buildChapterRequest(url);\n    let paths = await this.getDoc(opts).then(this.parser.imagesPaths);\n\n    return paths.map(x => this.processImagePath(this.buildImagePathsRequest(x)));\n  }\n\n\n  resolveMangaUrl(name: string): Promise<string> | string {\n    return this.nameHelper.resolveUrl(name);\n  }\n\n  protected buildRequest(url: string): OptionsWithUrl {\n    // todo add authentication headers\n    return {url};\n  }\n\n\n  protected buildMangasRequest(url: string) {\n    return this.buildRequest(url);\n  }\n\n  protected buildLatestRequest(url: string) {\n    return this.buildRequest(url);\n  }\n\n  protected buildInfoRequest(url: string) {\n    return this.buildRequest(url);\n  }\n\n  protected buildChapterRequest(url: string) {\n    return this.buildRequest(url);\n  }\n\n  protected buildImagePathsRequest(url: string) {\n    return this.buildChapterRequest(url);\n  }\n\n  protected getStrategy(): RequestStrategy {\n    const strategy: RequestStrategy = ginConfig.config.sites[this.sitename];\n    if (!strategy) {\n      throw new Error(`strategy not found for ${this.sitename}`);\n    }\n    return strategy;\n  }\n\n  protected getHtml(url: string | OptionsWithUrl): Promise<string> {\n    const strategy = this.getStrategy();\n    return request(url, strategy)\n      .then(x => x.toString());\n  }\n\n  protected getDoc(url: string | OptionsWithUrl): Promise<MangaXDoc> {\n    return this.getHtml(url).then(x => parseDoc(x, {location: (<any>url).url || url}));\n  }\n\n  protected postHtml(url: string | OptionsWithUrl, params?: any): Promise<string> {\n    let o = <OptionsWithUrl>url;\n    if (typeof url === \"string\") {\n      o = {url: url};\n    }\n\n    const strategy = this.getStrategy();\n    return request({...o, method: \"POST\", body: params}, strategy)\n      .then(x => x.toString());\n  }\n\n  protected postDoc(url: string | OptionsWithUrl, params?: any): Promise<MangaXDoc> {\n    return this.postHtml(url, params)\n      .then(x => parseDoc(x, {location: (<any>url).url || url}));\n  }\n\n\n  protected async resolveChapterSource(name: string, chapter: number | string): Promise<string> {\n    let chapters = await this.chapters(name);\n    const c = chapter.toString();\n\n    for (const chap of chapters) {\n      if (chap.chap_number === c) {\n        this.verbose(`filtered chapters %o`, chap);\n        return (chap as ChapterSource).src;\n      }\n    }\n    throw new Error(\"Chapter not found\");\n  }\n\n  private processImagePath(opts: any): GinImagePromise {\n    return new Lazy(async () => {\n      let image = await this.getHtml(opts).then(this.parser.image);\n\n      return <GinImage>{\n        name: parse(image).pathname.split(\"/\").reverse()[0],\n        src: image\n      };\n    });\n  }\n}\n\nexport default Site;\n\n","/**\n * Created by rodriguesc on 24/03/2017.\n */\n\nimport {resolve} from \"url\";\nimport {gin} from \"src/interface\";\nimport SiteConfig = gin.SiteConfig;\n\nconst site = \"https://bato.to/\";\nexport const config: SiteConfig = {\n    name : \"Batoto\",\n    site : site,\n    mangas_url : resolve(site, \"/search_ajax\"),\n    latest_url : resolve(site, \"/\"),\n};\nexport default config;\n\nexport const debug = require(\"debug\")(\"gin-downloader:batoto\");\nexport const verbose = require(\"debug\")(\"gin-downloader:batoto:verbose\");\nexport const error = require(\"debug\")(\"gin-downloader:batoto:error\");\nverbose(\"using %O\", config);\n","import {gin} from \"src/interface\";\nimport {config} from \"./config\";\nimport NameHelper = gin.NameHelper;\n\n\nexport class Helper implements NameHelper {\n  toName(name: string): string {\n    if (!name) {\n      return name;\n    }\n\n    if (name.endsWith(\"?!\")) { // to fix search 'Baito Saki wa \"Aku no Soshiki\"?!'\n      return name.slice(0, -1);\n    }\n    if (name === \"enígmә\") {\n      return \"Enigma\";\n    }\n\n    if (name === \"Pietà\") {\n      return \"Pieta\";\n    }\n    return name;\n  }\n\n  resolveUrl(name: string): string {\n    return config.site + \"Manga/\" + this.toName(name);\n  }\n}\n\n\nexport const helper = new Helper();\nexport default helper;\n","import {FilterCondition, FilterStatus, Genre, GenreCondition, Type} from \"src/enum\";\nimport {filter, MangaFilter} from \"src/filter\";\nimport {procFilter} from \"src/util\";\nimport {isNullOrUndefined} from \"util\";\nimport {config} from \"./config\";\nimport {helper} from \"./names\";\n\nconst Supported: { [id: string]: Genre } = {};\nSupported[Genre.Action] = Genre.Action;\nSupported[Genre.Adventure] = Genre.Adventure;\nSupported[Genre.Comedy] = Genre.Comedy;\nSupported[Genre.Mystery] = Genre.Mystery;\nSupported[Genre.Psychological] = Genre.Psychological;\nSupported[Genre.Romance] = Genre.Romance;\nSupported[Genre.SchoolLife] = Genre.SchoolLife;\nSupported[Genre.SciFi] = Genre.SciFi;\nSupported[Genre.Doujinshi] = Genre.Doujinshi;\nSupported[Genre.Drama] = Genre.Drama;\nSupported[Genre.Ecchi] = Genre.Ecchi;\nSupported[Genre.Fantasy] = Genre.Fantasy;\nSupported[Genre.GenderBender] = Genre.GenderBender;\nSupported[Genre.ShoujoAi] = Genre.ShoujoAi;\nSupported[Genre.Harem] = Genre.Harem;\nSupported[Genre.ShounenAi] = Genre.ShounenAi;\nSupported[Genre.Historical] = Genre.Historical;\nSupported[Genre.SliceOfLife] = Genre.SliceOfLife;\nSupported[Genre.Horror] = Genre.Horror;\nSupported[Genre.Smut] = Genre.Smut;\nSupported[Genre.Sports] = Genre.Sports;\nSupported[Genre.Supernatural] = Genre.Supernatural;\nSupported[Genre.MartialArts] = Genre.MartialArts;\nSupported[Genre.Tragedy] = Genre.Tragedy;\nSupported[Genre.Yaoi] = Genre.Yaoi;\nSupported[Genre.Mecha] = Genre.Mecha;\nSupported[Genre.Yuri] = Genre.Yuri;\nSupported[Genre.Seinen] = Genre.Seinen;\nSupported[Genre.Shounen] = Genre.Shounen;\nSupported[Genre.Josei] = Genre.Josei;\nSupported[Genre.Shoujo] = Genre.Shoujo;\nSupported[Genre.Webtoon] = Genre.Webtoon;\nSupported[Genre.Music] = Genre.Music;\nSupported[Genre.Oneshot] = Genre.Oneshot;\nSupported[Genre.AwardWinning] = Genre.AwardWinning;\nSupported[Genre.FourKoma] = Genre.FourKoma;\nSupported[Genre.Cooking] = Genre.Cooking;\nSupported[Genre.Medical] = Genre.Medical;\nSupported[Genre.NoChapters] = Genre.NoChapters;\n\n\nconst ordered = [\n  Genre.Action,\n  Genre.Adventure,\n  Genre.Comedy,\n  Genre.Mystery,\n  Genre.Psychological,\n  Genre.Romance,\n  Genre.SchoolLife,\n  Genre.SciFi,\n  Genre.Doujinshi,\n  Genre.Drama,\n  Genre.Ecchi,\n  Genre.Fantasy,\n  Genre.GenderBender,\n  Genre.ShoujoAi,\n  Genre.Harem,\n  Genre.ShounenAi,\n  Genre.Historical,\n  Genre.SliceOfLife,\n  Genre.Horror,\n  Genre.Smut,\n  Genre.Sports,\n  Genre.Supernatural,\n  Genre.MartialArts,\n  Genre.Tragedy,\n  Genre.Yaoi,\n  Genre.Mecha,\n  Genre.Yuri,\n  Genre.Seinen,\n  Genre.Shounen,\n  Genre.Josei,\n  Genre.Shoujo,\n  Genre.Webtoon,\n  Genre.Music,\n  Genre.Oneshot,\n  Genre.AwardWinning,\n  Genre.FourKoma,\n  Genre.Cooking,\n  Genre.Medical,\n  Genre.NoChapters,\n];\n\nlet dic: { [id: string]: string; } = {};\ndic[Genre.Action] = \"1\";\ndic[Genre.Adventure] = \"2\";\ndic[Genre.Comedy] = \"3\";\ndic[Genre.Mystery] = \"4\";\ndic[Genre.Psychological] = \"5\";\ndic[Genre.Romance] = \"6\";\ndic[Genre.SchoolLife] = \"7\";\ndic[Genre.SciFi] = \"8\";\ndic[Genre.Doujinshi] = \"9\";\ndic[Genre.Drama] = \"10\";\ndic[Genre.Ecchi] = \"12\";\ndic[Genre.Fantasy] = \"13\";\ndic[Genre.GenderBender] = \"15\";\ndic[Genre.ShoujoAi] = \"16\";\ndic[Genre.Harem] = \"17\";\ndic[Genre.ShounenAi] = \"19\";\ndic[Genre.Historical] = \"20\";\ndic[Genre.SliceOfLife] = \"21\";\ndic[Genre.Horror] = \"22\";\ndic[Genre.Smut] = \"23\";\ndic[Genre.Sports] = \"25\";\ndic[Genre.Supernatural] = \"26\";\ndic[Genre.MartialArts] = \"27\";\ndic[Genre.Tragedy] = \"28\";\ndic[Genre.Yaoi] = \"29\";\ndic[Genre.Mecha] = \"30\";\ndic[Genre.Yuri] = \"31\";\ndic[Genre.Seinen] = \"32\";\ndic[Genre.Shounen] = \"33\";\ndic[Genre.Josei] = \"34\";\ndic[Genre.Shoujo] = \"35\";\ndic[Genre.Webtoon] = \"36\";\ndic[Genre.Music] = \"37\";\ndic[Genre.Oneshot] = \"38\";\ndic[Genre.AwardWinning] = \"39\";\ndic[Genre.FourKoma] = \"40\";\ndic[Genre.Cooking] = \"41\";\ndic[Genre.Medical] = \"42\";\ndic[Genre.NoChapters] = \"44\";\n\n\nexport const processFilter = (mangafilter: MangaFilter): { src: string, qs: any } => {\n  let filter = procFilter(mangafilter);\n\n  let search = filter.search;\n  let fauthor = null;\n  let fstatus = null;\n  let ftype = null;\n  let fname = \"\";\n  let nameCondition = \"\";\n  let authorCondition = null;\n  let genreCondition = null;\n  let fmature = \"y\";\n  let fratingFrom = 0;\n  let fratingTo = 5;\n  let genres: Genre[] = null;\n  let outGenres: Genre[] = null;\n\n  if (search) {\n    let nameFilter = search.name;\n    if (nameFilter) {\n      fname = nameFilter.name;\n\n      nameCondition = resolveCondition(nameFilter.condition); // not support equals just Starts|Ends|Contains\n    }\n\n    let authorFilter = search.author || search.artist;\n    if (authorFilter) {\n      fauthor = authorFilter.name;\n      authorCondition = resolveCondition(authorFilter.condition);\n    }\n\n    let statusFilter = search.status;\n    if (statusFilter) {\n      fstatus = resolveStatus(statusFilter);\n    }\n\n    let genreFilter = search.genre;\n    if (genreFilter) {\n      genres = genreFilter.inGenres;\n      outGenres = genreFilter.outGenres;\n      genreCondition = resolveGenreCondition(genreFilter.condition);\n    }\n\n\n    let {type, mature, rating} = search;\n    if (type) {\n      ftype = resolveType(type);\n    }\n\n    fmature = isNullOrUndefined(mature) || mature ? \"y\" : \"n\";\n\n    if (rating) {\n      fratingFrom = rating.from || 0;\n      fratingTo = rating.to || 5;\n    }\n  }\n\n  const mangaName = helper.toName(fname);\n  const name_cond = nameCondition;\n  const artist_name = fauthor;\n  const artist_name_cond = authorCondition;\n\n  const genreFilter = ordered.map(x => inOutGenre(x, genres, outGenres)).filter(x => x !== \"\").join(\";\");\n  const genre_cond = genreCondition || \"genre_cond=and\"; // todo change me\n  const status = fstatus;\n  const type = ftype;\n  const p = filter.page || 1;\n\n  const rating_low = fratingFrom || 0; // 0~5\n  const rating_high = fratingTo || 5; // 0~5\n  const mature = fmature || \"y\"; // n == false\n\n  return {\n    src: config.mangas_url,\n    qs: {\n      name: mangaName,\n      name_cond,\n      artist_name,\n      artist_name_cond,\n      genres: genreFilter,\n      genre_cond,\n      status,\n      type,\n      mature,\n      rating_low,\n      rating_high,\n      p\n    }\n  };\n};\n\n\nfunction resolveType(type: Type) {\n  switch (type) {\n    case Type.Manga:\n      return \"jp\";\n    case Type.Manhwa:\n      return \"kr\";\n    case Type.Manhua:\n      return \"cn\";\n    case Type.Artbook:\n      return \"ar\";\n    case Type.Other:\n      return \"ot\";\n    default:\n      throw new Error(\"Unknown type\");\n  }\n}\n\n\nfunction resolveCondition(condition: FilterCondition) {\n  switch (condition) {\n    case FilterCondition.Contains:\n      return \"c\";\n    case FilterCondition.EndsWith:\n      return \"e\";\n    case FilterCondition.StartsWith:\n      return \"s\";\n    case FilterCondition.Equal: // not supported for name\n      return \"is\";\n\n    default:\n      return \"c\";\n  }\n}\n\nfunction resolveGenreCondition(condition: GenreCondition) {\n  switch (condition) {\n    case GenreCondition.And:\n      return \"and\";\n    case GenreCondition.Or:\n      return \"or\";\n    default:\n      return \"and\";\n  }\n}\n\nfunction resolveStatus(status: FilterStatus) {\n  switch (status) {\n    case FilterStatus.Ongoing:\n      return \"i\";\n    case FilterStatus.Complete:\n      return \"c\";\n    default:\n      return null;\n  }\n}\n\nfunction inOutGenre(genre: Genre, inGenre: Genre[], outGenre: Genre[]) {\n  if (inGenre && inGenre.indexOf(genre) > -1) {\n    return `i${dic[genre]}`;\n  }\n  if (outGenre && outGenre.indexOf(genre) > -1) {\n    return `e${dic[genre]}`;\n  }\n  return \"\";\n}\n\n\n","import {last} from \"lodash\";\nimport {Type} from \"src/enum\";\nimport {FilteredResults} from \"src/filter\";\nimport {gin, Info, Synonym} from \"src/interface\";\nimport {sanitize} from \"src/util\";\nimport {resolve} from \"url\";\n\nimport {config, error} from \"./config\";\nimport ChapterSource = gin.ChapterSource;\nimport MangaSource = gin.MangaSource;\nimport MangaXDoc = gin.MangaXDoc;\nimport SiteParser = gin.SiteParser;\n\n\nexport class Parser implements SiteParser {\n  mangas($: MangaXDoc): Promise<MangaSource[]> | MangaSource[] {\n    const rows = $(\"tr[id^='comic_rowo']\");\n\n    let mangas: MangaSource[] = [];\n    rows.each((i, e) => {\n      // note this performance can be improved, is taking around 72ms to resolve 30 items, libxml could handle that\n      // in 10ms, if we don't use the $() it can reach around those speeds, 72ms is not that much\n      let td = $(e).prev();\n\n      mangas[i] = {\n        name: td.find(\"td > strong > a\").text().slice(1), // contains a space at the beggining\n        src: td.find(\"td > strong > a\").attr(\"href\"),\n        status: td.find(\"td > strong > a > img\").attr(\"src\").indexOf(\"book_open\") > 0 ? \"Open\" : \"Closed\",\n\n        mature: td.find(\"td > img\").eq(1).attr(\"alt\") === \"Mature\",\n      };\n    });\n\n    // console.log(mangas);\n    return mangas;\n  }\n\n  latest($: MangaXDoc): Promise<ChapterSource[]> | ChapterSource[] {\n    let chapters: ChapterSource[] = [];\n    let $trs: CheerioElement[] = [];\n\n    $(\"#content > div > div.category_block.block_wrap > table > tbody > tr\").slice(1).each((i, el) => {\n      $trs[i] = el;\n    });\n\n\n    for (let i = 0; i < $trs.length; ++i) {\n      let header = $trs[i];\n      let ha = last(sanitize(header.children)).children\n        .find(x => x && x.attribs && x.attribs.href && x.attribs.href.startsWith(\"http\"));\n\n      // let mangaUrl = ha.attribs.href;\n      let mangaName = ha.lastChild.nodeValue;\n      let row = header.attribs.class.slice(0, 4);\n\n\n      let tr: CheerioElement;\n      while ((tr = $trs[++i]) && (tr.attribs && tr.attribs.class.startsWith(row))) {\n        let tds = sanitize(tr.children).reverse(); // reversed\n\n\n        let date = tds[0].lastChild.nodeValue.trim(); // date\n        let sTd = tds[1].children.find(x => x.name === \"a\"); // scanlator\n        let lTd = tds[2].children.find(x => x.name === \"div\"); // lang\n        let cTd = tds[3].children.find(x => x.name === \"a\"); // chapter\n\n\n        //\n        // if(i>9){\n        //   console.log($trs[i]);\n        //   console.log(mangaName);\n        //   console.log(mangaUrl);\n        // }\n\n\n        let cname = cTd.lastChild.nodeValue;\n        let src = cTd.attribs.href;\n        let lang = lTd.attribs.title;\n        let scanlator = sTd.lastChild.nodeValue;\n\n\n        chapters[i] = {\n          name: mangaName, // Parser.extractChapterName(cname),\n          chap_number: Parser.extractChapterNumber(cname).toString(),\n          volume: Parser.extractVolumeNumber(cname),\n\n          src: Parser.convertChapterReaderUrl(src),\n\n          language: lang,\n          scanlator: scanlator,\n\n          dateAdded: date\n        };\n      }\n      --i;\n    }\n    return chapters;\n  }\n\n  info($: MangaXDoc): Promise<Info> | Info {\n\n    let $content = $(\"#content\");\n    let $ipsBox = $content.find(\"div.ipsBox\");\n    let $ipbTable = $ipsBox.find(\".ipb_table\");\n    let $tr = $ipbTable.find(\"tr > td\");\n\n\n    let title = $(\"h1.ipsType_pagetitle\").text().trim();\n    let image = $ipsBox.find(\"img\").attr(\"src\");\n    let synonyms = $tr.eq(1).children(\"span\").map((i, e) => e.lastChild && e.lastChild.nodeValue.slice(1)).get().filter(x => x);\n    let authors = $tr.eq(3).children(\"a\").map((i, e) => e.lastChild && e.lastChild.nodeValue).get().filter(x => x);\n    let artists = $tr.eq(5).children(\"a\").map((i, e) => e.lastChild && e.lastChild.nodeValue).get().filter(x => x);\n    let genres = $tr.eq(7).children(\"a\").map((i, e) => e.lastChild.lastChild).filter((x, e) => !!e).map((i, e) => e.nodeValue.slice(1)).get();\n    let synopsis = $tr.eq(13).text();\n\n    let type = Parser.resolveMangaType($tr.eq(9).text().trim()); // TODO curate this result, Manga (Japanese)\n\n    let status = $tr.eq(11).text().trim();\n\n    let mature = $content.find(\"div:nth-child(4) > div > div.ipsBox > div:nth-child(3)\").length > 0;\n\n    return {\n      image,\n      title,\n      synonyms: synonyms.map(Parser.resolveSynonyms),\n      authors,\n      artists,\n      genres,\n      synopsis,\n      status,\n      type,\n\n      mature,\n    };\n  }\n\n  private static resolveSynonyms(title: string): Synonym {\n    const reg = /\\(\\w+\\)$/;\n    let language = \"English\";\n\n    const m = title.match(reg);\n    if (m) {\n      language = m[0].slice(1, -1);\n    }\n    return {title, language};\n  }\n\n  private static resolveMangaType(tp: string): Type {\n    switch (tp) {\n      case \"Manga (Japanese)\":\n        return Type.Manga;\n\n      case \"Manhwa (Korean)\":\n        return Type.Manhwa;\n\n      case \"Manhua (Chinese)\":\n        return Type.Manhwa;\n\n      case \"Artbook\":\n        return Type.Artbook;\n\n      case \"Other\":\n        return Type.Other;\n\n      default:\n        throw new Error(`Unknown manga type: ${tp}`);\n    }\n  }\n\n  chapters($: MangaXDoc): Promise<ChapterSource[]> | ChapterSource[] {\n    let chapters: ChapterSource[] = [];\n\n\n    $(\".chapter_row\")\n      .each((i, e) => {\n        let children = e.children.filter(x => x.type === \"tag\");\n\n        let eTitle = children[0];\n        let eLanguage = children[1];\n        let eGroup = children[2];\n        let eDate = children[4];\n\n\n        // const fullTitle = eTitle.next.childNodes[1].lastChild.nodeValue.slice(1);\n\n        const a = eTitle.childNodes.find(x => x.name === \"a\");\n        const fullTitle = a.lastChild.nodeValue.slice(1);\n        const src = Parser.convertChapterReaderUrl(a.attribs.href);\n\n        const name = Parser.extractChapterName(fullTitle);\n        const chap_number = Parser.extractChapterNumber(fullTitle).toString();\n        const volume = Parser.extractVolumeNumber(fullTitle);\n        const language = eLanguage.lastChild.attribs.title;\n        const scanlator = eGroup.childNodes.find(x => x.name === \"a\").lastChild.nodeValue;\n\n        const dateAdded = eDate.lastChild.nodeValue;\n\n        chapters[i] = {\n          chap_number,\n          volume,\n          src,\n          name,\n          language,\n          scanlator,\n          dateAdded,\n        };\n      });\n\n    return chapters;\n\n  }\n\n  imagesPaths($: MangaXDoc): string[] {\n    let paths: string[] = [];\n    $(\"#page_select\").eq(1).children().each((i, e) => paths[i] = Parser.convertChapterReaderUrl(e.attribs[\"value\"]));\n    return paths;\n  }\n\n  static convertChapterReaderUrl(src: string) {\n    if (src.startsWith(resolve(config.site, \"/areader\"))) {\n      return src;\n    }\n\n    let idNumber = src.split(\"#\")[1];\n    let pg = 1;\n\n    let pgMatch = /_\\d+$/.exec(idNumber);\n\n    if (pgMatch) {\n      pg = +pgMatch[0].slice(1);\n\n      idNumber = idNumber.replace(pgMatch[0], \"\");\n    }\n\n    return resolve(config.site, `/areader?id=${idNumber}&p=${pg}`);\n  }\n\n  image(html: string): string {\n    let regex = /(?:id=\"comic_page\".*)((http|https):\\/\\/img\\.bato\\.to\\/comics\\/[^\"]*)/gm;\n\n    let m = regex.exec(html); // get the first match\n\n    if (!m) {\n      error(\"image regex failed using:\\nhtml:%s\", html);\n      throw new Error(\"Image not found\");\n    }\n    return m[1];\n  }\n\n\n  filter($: MangaXDoc): Promise<FilteredResults> | FilteredResults {\n    let results = this.mangas($);\n\n    let next = $(\".input_submit\");\n\n\n    let {location} = $;\n    let matches = location.match(/\\d+$/); // get page | &p=11\n    let match = matches && +matches[0];\n\n    return <FilteredResults>{\n      results: results,\n      page: match || 1,\n      total: (next.length && 99999) || +match || 1\n    };\n  }\n\n  static extractChapterNumber(text: string): number {\n    let match = text.match(/Ch\\.\\d+(\\.\\d{1,3})?/);\n    return match && match[0] && +match[0].slice(3);\n  }\n\n  static extractVolumeNumber(text: string): string {\n    let match = text.match(/Vol\\.\\d+/);\n    return match && match[0] && match[0].slice(4);\n  }\n\n  static extractChapterName(text: string): string {\n    let index = text.indexOf(\":\");\n    return (index > 0 && text.slice(index + 2)) || text;\n  }\n}\n\nexport const parser = new Parser();\nexport default parser;\n","import {capitalize, deburr} from \"lodash\";\nimport {OptionsWithUrl} from \"request\";\nimport {FilterCondition} from \"src/enum\";\nimport {FilteredResults, MangaFilter} from \"src/filter\";\nimport {gin, LoginSite, Site} from \"src/interface\";\nimport {MangaSite} from \"src/mangasite\";\nimport {config} from \"./config\";\n\nimport {processFilter} from \"./filter\";\nimport {Helper} from \"./names\";\nimport {Parser} from \"./parser\";\nimport MangaSource = gin.MangaSource;\nimport SiteConfig = gin.SiteConfig;\n\nexport class Batoto extends MangaSite<SiteConfig, Parser, Helper> implements LoginSite {\n  sitename = \"batoto\";\n\n  private _urlCache: { [id: string]: string } = {}; // provide a cache for resolved urls\n\n  public constructor() {\n    super(config, new Parser(), new Helper());\n  }\n\n  async resolveMangaUrl(name: string) {\n    if (this._urlCache[name]) {\n      return this._urlCache[name];\n    }\n    let filter: MangaFilter = {search: {name: {name: name, condition: FilterCondition.Contains}}};\n\n    let filterResults: FilteredResults;\n    do {\n      let page = 0;\n      if (filterResults) {\n        page = filterResults.page + 1;\n      }\n      filter.page = page;\n\n      filterResults = await this.filter(filter);\n\n      let {results} = filterResults;\n\n      this.debug(\"filtered results: %o\", results);\n\n      let result: string;\n\n      // console.log(results);\n      for (let obj of results) {\n        if (obj.name === name) {\n          result = obj.src;\n        }\n        else if (obj.name.startsWith(name) && obj.name === `${name} (${capitalize(deburr(name.replace(\"ә\", \"a\")))})`) {\n          result = obj.src;\n        }\n        this._urlCache[obj.name] = obj.src; // add to cache\n      }\n\n      if (result) {\n        return result;\n      }\n    } while (filterResults.page < filterResults.total && filterResults.results.length > 0);\n\n    return \"\";\n  }\n\n  mangas(filter?: MangaFilter): Promise<MangaSource[]> {\n    return this.filter(filter).then(x => x.results);\n  }\n\n  async filter(filter?: MangaFilter): Promise<FilteredResults> {\n    this.debug(\"filter mangas with: %o\", filter);\n\n\n    // if (typeof filter === \"string\") {\n    //\n    //   filter.replace('+','%2B');\n    //\n    //   let i = filter.indexOf(\"+ \");\n    //   if (i > -1) {\n    //     filter = filter.slice(0, i);\n    //   }\n    // }\n    // else {\n    //   let i;\n    //   if (filter.name && (i = filter.name.indexOf(\"+ \")) > -1) {\n    //     filter.name = filter.name.slice(0, i);\n    //   }\n    //   if (filter.search &&   (i = (<FilterSupport>filter.search.name).name.indexOf(\"+ \")) > -1) {\n    //     (<FilterSupport>filter.search.name).name =  (<FilterSupport>filter.search.name).name.slice(0, i);\n    //   }\n    //\n    //   if(filter.name){\n    //     filter.name = filter.name.replace('+','%2B');\n    //   }\n    // }\n\n\n    let search = processFilter(filter);\n\n\n    let doc = await this.getDoc({url: search.src, qs: search.qs});\n    let mangas = await this.parser.filter(doc);\n\n    this.debug(`mangas: ${mangas.results.length}`);\n\n    return mangas;\n  }\n\n\n  protected async resolveChapterSource(name: string, chapter: number): Promise<string> {\n    let src = await super.resolveChapterSource(name, chapter);\n    if (!src) {\n      return src;\n    }\n    return Parser.convertChapterReaderUrl(src);\n  }\n\n  protected buildChapterRequest(url: string): OptionsWithUrl {\n    let opts = super.buildRequest(url);\n    opts.headers = {...opts.headers, Referer: \"http://bato.to/reader\"};\n    return opts;\n  }\n\n  // buildLoginRequest(url: )\n\n\n  async isLoggedIn(): Promise<boolean> {\n    let html = await this.getHtml(\"http://bato.to/search\");\n    let match = html.match(/>Sign Out<\\/a>/m);\n    return !!match;\n  }\n\n  async login(user: string, pw: string, rememberMe: boolean = true) {\n    let url = \"http://bato.to/forums/index.php?app=core&module=global&section=login&do=process\";\n\n    let request = this.buildRequest(url);\n    let $ = await this.getDoc(request);\n    let authKey = $(\"#login > input[name='auth_key']\").attr(\"value\");\n\n    let body = {\n      ips_username: user,\n      ips_password: pw,\n      referer: \"https://bato.to/forums\",\n      rememberMe: rememberMe ? 1 : 0,\n      auth_key: authKey,\n    };\n\n    request = {\n      ...request, formData: body,\n      // proxy: \"http://127.0.0.1:8888\"\n    };\n\n    let html = await this.postHtml(request);\n\n\n    return !!html.match(/<strong>You are now signed in<\\/strong>/m);\n  }\n}\n\nexport const manga = new Batoto();\nexport default manga;\n","\r\n\r\nimport {gin, InfoChapter, Site, ImageCollection, Chapter, GinImage} from \"src/interface\";\r\nimport ChapterSource = gin.ChapterSource;\r\nimport {Lazy} from \"src/util\";\r\n\r\n\r\nexport class SuperObject {\r\n  get chapters(): SuperChapter[] {\r\n    return this._chapters;\r\n  }\r\n  private _chapters: SuperChapter[];\r\n\r\n  get info(): InfoChapter {\r\n    return {...this._info};\r\n  }\r\n  private _info: InfoChapter;\r\n\r\n\r\n\r\n  constructor(readonly name: string, readonly site: Site, readonly url?: string) {\r\n\r\n  }\r\n\r\n  async update(): Promise<InfoChapter> {\r\n    const p = this.url\r\n      ? this.site.infoChaptersByUrl(this.url)\r\n      : this.site.infoChapters(this.name);\r\n\r\n    const info = await p;\r\n\r\n    const chapters = info.chapters.map((x: ChapterSource) => this.toSuperChapter(x));\r\n    this._chapters = chapters;\r\n\r\n    return this._info = info;\r\n  }\r\n\r\n  private toSuperChapter(chapter: ChapterSource): SuperChapter {\r\n    let c = new SuperChapter(this, chapter);\r\n    return c;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class SuperChapter {\r\n  get images(): ImageCollection {\r\n    return this._images;\r\n  }\r\n\r\n  get source(): Chapter{\r\n    return this._source;\r\n  }\r\n\r\n  private _images: ImageCollection;\r\n  constructor(readonly master: SuperObject, private readonly _source: ChapterSource) {\r\n  }\r\n\r\n  async fetch() {\r\n    return this._images || (this._images = await this.master.site.imagesByUrl(this._source.src));\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","// import {manga as mangafox} from \"./sites/mangafox/index\";\r\n// import {manga as mangahere} from \"./sites/mangahere/index\";\r\n// import {manga as mangapanda} from \"./sites/mangapanda/index\";\r\n// import {manga as kissmanga} from \"./sites/kissmanga/index\";\r\nexport {manga as batoto} from \"./sites/batoto/index\";\r\n\r\nexport {SuperChapter, SuperObject} from \"./super_obj\";\r\nexport {ginConfig} from \"./config\";\r\nexport {parseDoc} from \"./util\";\r\n\r\n\r\nexport {strategies} from \"./request/index\";\r\nexport {request} from \"./request/pool\";\r\n\r\n// export const gin = {\r\n//   // mangafox,\r\n//   // mangahere,\r\n//   // mangapanda,\r\n//   // kissmanga,\r\n//   batoto,\r\n// };\r\n//\r\n// import {LoginSite, Site} from \"src/interface\";\r\n//\r\n// const enum sites {\r\n//   mangafox = \"mangafox\",\r\n//   mangapanga = \"mangapanga\",\r\n//   mangahere = \"mangahere\",\r\n//   kissmanga = \"kissmanga\",\r\n//   batoto = \"batoto\",\r\n// }\r\n//\r\n// export class GinDownloader {\r\n//   private _mangafox: Site;\r\n//   private _mangapanga: Site;\r\n//   private _mangahere: Site;\r\n//   private _kissmanga: Site;\r\n//   private _batoto: Site;\r\n//\r\n//   private static resolveSite(site: sites)  {\r\n//     return require(`./sites/${site}/index`).default;\r\n//   }\r\n//\r\n//   get mangafox(): Site{\r\n//     return this._mangafox || (this._mangafox = GinDownloader.resolveSite(sites.mangafox));\r\n//   }\r\n//   get mangapanga(): Site{\r\n//     return this._mangapanga || (this._mangapanga = GinDownloader.resolveSite(sites.mangapanga));\r\n//   }\r\n//   get mangahere(): Site{\r\n//     return this._mangahere || (this._mangahere = GinDownloader.resolveSite(sites.mangahere));\r\n//   }\r\n//   get kissmanga(): Site{\r\n//     return this._kissmanga || (this._kissmanga = GinDownloader.resolveSite(sites.kissmanga));\r\n//   }\r\n//   get batoto(): LoginSite {\r\n//     return this._batoto || (this._batoto = GinDownloader.resolveSite(sites.batoto));\r\n//   }\r\n//\r\n// }\r\n//\r\n//\r\n// const gin = new GinDownloader();\r\n// export default gin;\r\n\r\n"],"names":["tslib_1.__assign","config","DefaultOptions","pick","strategy","retryStrategy","cloudFlareStrategy","resolve","cheerio.load","url","tslib_1.__extends","parse","debug","isNullOrUndefined","last","capitalize","deburr"],"mappings":"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"}